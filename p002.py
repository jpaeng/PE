# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 15 terms will be:
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.


def solution(max_n):
    """
    sum just the even terms
    every third term is even
    n = current term
    n_3 = (n-3)th term
    next term = 4*n + n_3

    only valid for max_n >= 10
    """
    n = 8
    n_3 = 2
    total = 10

    while (n <= max_n):
        n, n_3 = 4 * n + n_3, n
        total += n

    total -= n

    return (total)

print(solution(10))
print(solution(33))
print(solution(34))
print(solution(35))
print(solution(3999999))